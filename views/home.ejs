<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src='https://api.mapbox.com/mapbox-gl-js/v3.12.0/mapbox-gl.js'></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v3.12.0/mapbox-gl.css' rel='stylesheet' />
    <link rel="stylesheet" href="/static/styles/home.css">
    <title>Like Us Map</title>
</head>

<body>

    <div class="container">

        <h1 class="title">Not Like Us?</h1>

        <h2>An examination of congressional networth and median district income.</h2>

        <section class="main">
            <div class="map-overlay-right" id="properties"></div>
            <div class="map-legend-container">
                <div id='map'></div>
                <div class="map-overlay" id="legend"></div>
            </div>

        </section>

        <h3>Methodology</h3>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Nostrum neque doloribus repellendus nobis repellat
            id tempore in? A beatae dicta, iusto doloremque molestiae eius veritatis vero repudiandae maxime facere
            consequuntur?
            Cupiditate pariatur consectetur voluptatum culpa harum maxime hic repellendus velit porro unde quod autem
            vitae incidunt eius exercitationem quaerat, eveniet alias. Minus eaque debitis vel repudiandae eligendi in
            mollitia cum?</p>

    </div>
    <script>

        // Shortened display names

        displayNames = {
            'il_district': 'District',
            'IL_Congressional_NetWorth$.Congressperson': 'Congressperson',
            'IL_Congressional_NetWorth$.Average_Net_Worth': 'Avg. Net Worth',
            'IL_Congressional_NetWorth$.B19013_001E___Median_Household_': 'Median Household Income',
            'wealth_index': 'Wealth Disparity Score'
        };

        mapboxgl.accessToken = "<%= token %>"
        const map = new mapboxgl.Map({
            container: 'map', // container ID
            style: 'mapbox://styles/mapbox/satellite-v9', // style URL
            center: [-89, 40.6], // starting position [lng, lat]
            zoom: 5, // starting zoom
        });

        const card = document.getElementById('properties');

        const intro = `
        <p>Click on a congressional district to see that representative’s estimated net worth, the median annual income of their district, and a wealth disparity score for comparison.</p>

        <p>Congressional net worth estimates are based on 2023 financial disclosure reports. Asset and liability ranges were reviewed and aggregated to calculate an average net worth for each representative.</p>

        <p>District-level median household income data comes from the U.S. Census Bureau.</p>

        <p>The wealth disparity index compares a representative’s net worth to the income of the people they represent. It answers the question: how much more (or less) wealth does a congressperson have compared to the typical household in their district?</p>

        <p>The score is calculated by subtracting the median household income from the representative’s net worth, then dividing the result by the median income. In other words:  
        <em>(Net Worth − Median Income) ÷ Median Income</em>.</p>

        <p>A score of 0 means the representative’s net worth is equal to the district’s median income. A score of 1 means they have twice as much. A score of 2 means three times as much, and so on. Negative scores indicate the representative has less wealth than the typical household in their district.</p>

        <p>For example, a score of 200 means the representative's net worth is 201 times greater than the district’s median income—a disparity of 20,000%.</p>

        <p>Additional methodology details can be found at the bottom of the page.</p>
        `;

        card.innerHTML = intro;

        const showCard = (feature) => {
            const listItems = Object.entries(feature.properties).filter(([key]) => displayNames[key]).map(([key, value]) => {
                let formattedValue = value;
                if (typeof value === 'number' && key !== 'il_district' && key !== 'wealth_index') {
                    formattedValue = `$${value.toLocaleString()}`;
                }
                return `<li><b>${displayNames[key]}</b>: ${formattedValue}</li>`
            })
                .join('');

            card.innerHTML = `
            <div class="map-overlay-inner">
                <code>${feature.properties.il_district}</code><hr>
                <ul>${listItems}</ul>
                <br><button id="show-intro-btn">Show Intro</button>
                </div>`;

            card.style.display = 'block';

            // Click event listener for the button to toggle back to introduction/instructions
            document.getElementById('show-intro-btn').addEventListener('click', () => {
                card.innerHTML = intro;
            });
        };

        map.on('load', () => {
            // Adding our GeoJSON data to the map
            map.addSource('congress-networth', {
                type: 'geojson',
                data: '/static/congress_nw.geojson'
            });


            const layers = [
                'Below District Median',
                'Slightly Above Median',
                'Wealthy',
                'Very Wealthy',
                'Extremely Wealthy',
            ];

            const colors = [
                '#D2F2D4',
                '#7BE382',
                '#26CC00',
                '#22B600',
                '#009C1A'
            ];

            const legend = document.getElementById('legend');

            layers.forEach((layer, i) => {
                const color = colors[i];
                const item = document.createElement('div');
                const key = document.createElement('span');
                item.className = 'legend-item';
                key.className = 'legend-key';
                key.style.backgroundColor = color;

                const value = document.createElement('span');
                value.innerHTML = `${layer}`;
                item.appendChild(key);
                item.appendChild(value);
                legend.appendChild(item);
            });

            // Adding congressional networth data to the map.
            // This includes the fill color logic for the choropleth map
            // As well as upon hovering, a district turns blue
            map.addLayer({
                'id': 'networth-layer',
                'type': 'fill',
                'source': 'congress-networth',
                'paint': {
                    'fill-color': [
                        'case',
                        ['boolean', ['feature-state', 'hover'], false],
                        '#0066ff',
                        [
                            'step',
                            ['get', 'wealth_index'],
                            '#f1eef6', //default color or < first step
                            .00001, '#D2F2D4',
                            10, '#7BE382',
                            50, '#26CC00',
                            100, '#22B600',
                            216, '#009C1A'
                        ]
                    ],
                    'fill-opacity': 0.85,
                    'fill-outline-color': '#ffffff'
                }
            });

            let hoverId = null;

            // 'e' is the event object in MapBox GL JS
            // e.features is an array of GeoJSON features from the layer under the mouse at the moment
            // e.features has a length b/c if 1 or more features are under cursor, length = 1 or more, if you're on the background or outside the layer, its 0
            // we're saying when the mouse moves on the networth layer, if the hover is over a polygon from net worth layer, do the hover effect
            map.on('mousemove', 'networth-layer', (e) => {
                if (e.features.length > 0) {
                    if (hoverId !== null) {
                        map.setFeatureState(
                            { source: 'congress-networth', id: hoverId },
                            { hover: false }
                        );
                    }

                    // e.features[0] is the first feature under the mouse
                    // so here we're going into the hover feature and grabbing its id
                    // that zero index is just a reference to the first feature under the mouse
                    hoverId = e.features[0].id;

                    map.setFeatureState(
                        { source: 'congress-networth', id: hoverId },
                        { hover: true }
                    );
                }
            });

            map.on('mouseleave', 'networth-layer', () => {
                if (hoverId !== null) {
                    map.setFeatureState(
                        { source: 'congress-networth', id: hoverId },
                        { hover: false }
                    );
                }
                hoverId = null;
            })

            let selectedFeature = null;
            map.on('click', 'networth-layer', (e) => {
                const feature = e.features[0];
                if (selectedFeature) {
                    map.setFeatureState(selectedFeature, { selected: false });
                }

                selectedFeature = feature;
                map.setFeatureState(feature, { selected: true });
                showCard(feature);
            }
            );
        });

    </script>

</body>


</html>